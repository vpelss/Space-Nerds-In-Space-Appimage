name: SNISBuilder_x86_arm

on: workflow_dispatch
    
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
 
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-24.04
    #runs-on: ubuntu-latest
    #container: centos:7

    strategy:
      matrix:
        arch: [x86_64, aarch64]
      # Don't fail the whole workflow if one architecture fails
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    # Docker is required by the docker/setup-qemu-action which enables emulation
    - name: Install deps
      if: ${{ matrix.arch != 'x86_64' }}
      run: |
        #sudo apt -y install docker
        #dnf -y install docker
    - name: Set up QEMU
      if: ${{ matrix.arch != 'x86_64' }}
      id: qemu
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64
        
    - name: Configure MakeIt
      run: |      
        sudo apt install libfuse2 #required to build AppImage
        sudo apt-get -y install build-essential portaudio19-dev libpng-dev libvorbis-dev libsdl2-dev libsdl2-2.0-0 liblua5.2-dev libglew-dev libttspico-utils sox espeak alsa-utils
        sudo apt-get -y install libcurl4-gnutls-dev
        
        SnisGit='space-nerds-in-space'
        AppDir='SpaceNerdsInSpaceDir'
        SnisAppImageToolsGit='Space-Nerds-In-Space-Appimage'

        git clone --depth 1 https://github.com/smcameron/${SnisGit}.git
        cd $SnisGit
        make PREFIX=../$AppDir/usr/bin/ install DOWNLOAD_OPUS=yes WITHVOICECHAT=yes
        #make does not move it on install
        cp  bin/check-endianness ../$AppDir/usr/bin/bin/ 
        cd ..
        # it is not where it needs to be
        mv $AppDir/usr/bin/bin/snis_launcher $AppDir/usr/bin/snis_launcher

        mkdir -p $AppDir/usr/lib
        mkdir -p $AppDir/usr/share/icons/hicolor/scalable/apps
        mkdir -p $AppDir/usr/share/applications

        git clone --depth 1 https://github.com/vpelss/${SnisAppImageToolsGit}.git
        cp $SnisAppImageToolsGit/AppRun $AppDir
        cp $SnisAppImageToolsGit/icon.svg $AppDir/usr/share/icons/hicolor/scalable/apps
        ln -s $AppDir/usr/share/icons/hicolor/scalable/apps/icon.svg .DirIcon
        cp $SnisAppImageToolsGit/icon.svg $AppDir
        cp $SnisAppImageToolsGit/snis.desktop $AppDir/usr/share/applications
        cp $SnisAppImageToolsGit/snis.desktop $AppDir/usr/bin/share/applications
        cp $SnisAppImageToolsGit/snis.desktop $AppDir

        # get linuxdeploy's AppImage if you donâ€™t have it
        
    - name: keep going
      run: |      
        if [${{ matrix.arch }} == 'x86_64']; then
           wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
           mv linuxdeploy-x86_64.AppImage linuxdeploy.AppImage
           chmod +x linuxdeploy.AppImage  
           echo "86 86 86 86 86 86 86 86"
        else
           wget https://github.com/linuxdeploy/linuxdeploy/releases/download/1-alpha-20250213-2/linuxdeploy-aarch64.AppImage
           mv linuxdeploy-aarch64.AppImage linuxdeploy.AppImage
           chmod +x linuxdeploy.AppImage  
           echo "arm arm arm arm arm arm arm arm "
        fi
              
        ARCH=${{ matrix.arch }} ./linuxdeploy.AppImage --deploy-deps-only=$AppDir/usr/bin/bin --appdir $AppDir --output appimage

        chmod 777 Space_Nerds_in_Space-${{ matrix.arch }}.AppImage

        #run it
        printf '0' |./Space_Nerds_in_Space-${{ matrix.arch }}.AppImage

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Space_Nerds_in_Space-${{ matrix.arch }}.AppImage 
        path: Space_Nerds_in_Space-${{ matrix.arch }}.AppImage 
 
    - name: upload binaries to release
      uses: softprops/action-gh-release@v2
      #if: ${{startsWith(github.ref, 'refs/tags/') }}
      with:
          tag_name: "try_me"
          files: Space_Nerds_in_Space-${{ matrix.arch }}.AppImage 
