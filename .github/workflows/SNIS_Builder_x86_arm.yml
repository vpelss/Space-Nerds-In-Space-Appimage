name: SNISBuilder_x86_arm

on: workflow_dispatch
    
jobs:
  build-and-test:
    strategy:
      matrix:
        include:
          - ARCH: x86_64
            RUNS_ON: ubuntu-24.04
            BUILD_TYPE: appimage
          - ARCH: aarch64
            RUNS_ON: ubuntu-24.04-arm
            BUILD_TYPE: appimage
      fail-fast: false

    name: SNIS ${{ matrix.BUILD_TYPE }} ${{ matrix.ARCH }}
    runs-on: ${{ matrix.RUNS_ON }}

    env:
      ARCH: ${{ matrix.ARCH }}
      BUILD_TYPE: ${{ matrix.BUILD_TYPE }}
      # make sure to always(!) pull the base image
      UPDATE: 1
      
    steps:
    - uses: actions/checkout@v4

    # Docker is required by the docker/setup-qemu-action which enables emulation
   # - name: Set up QEMU
    #  if: ${{ matrix.arch == 'aarch64' }}
     # run: |
      #  sudo apt -y install qemu-system-arm qemu-user-static
      #id: qemu
      #uses: docker/setup-qemu-action@v2
      #with:
      #  platforms: arm64
            
    - name: get libraries
      run: |      
        echo ${{ matrix.ARCH}}
        sudo apt install libfuse2 #required to build AppImage
        sudo apt-get -y install build-essential portaudio19-dev libpng-dev libvorbis-dev libsdl2-dev libsdl2-2.0-0 liblua5.2-dev libglew-dev libttspico-utils sox espeak alsa-utils
        sudo apt-get -y install libcurl4-gnutls-dev
        
        SnisGit='space-nerds-in-space'
        AppDir='SpaceNerdsInSpaceDir'
        SnisAppImageToolsGit='Space-Nerds-In-Space-Appimage'

        git clone --depth 1 https://github.com/smcameron/${SnisGit}.git
        cd $SnisGit
        make PREFIX=../$AppDir/usr/bin/ install DOWNLOAD_OPUS=yes WITHVOICECHAT=yes
        #make does not move it on install
        cp  bin/check-endianness ../$AppDir/usr/bin/bin/ 
        cd ..
        # it is not where it needs to be
        mv $AppDir/usr/bin/bin/snis_launcher $AppDir/usr/bin/snis_launcher

        mkdir -p $AppDir/usr/lib
        mkdir -p $AppDir/usr/share/icons/hicolor/scalable/apps
        mkdir -p $AppDir/usr/share/applications

        git clone --depth 1 https://github.com/vpelss/${SnisAppImageToolsGit}.git
        cp $SnisAppImageToolsGit/AppRun $AppDir
        cp $SnisAppImageToolsGit/icon.svg $AppDir/usr/share/icons/hicolor/scalable/apps
        ln -s $AppDir/usr/share/icons/hicolor/scalable/apps/icon.svg .DirIcon
        cp $SnisAppImageToolsGit/icon.svg $AppDir
        cp $SnisAppImageToolsGit/snis.desktop $AppDir/usr/share/applications
        cp $SnisAppImageToolsGit/snis.desktop $AppDir/usr/bin/share/applications
        cp $SnisAppImageToolsGit/snis.desktop $AppDir

        # get linuxdeploy's AppImage if you donâ€™t have it
        
    - name: test86
      if: ${{ matrix.ARCH == 'x86_64' }} 
      run: |      
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        mv linuxdeploy-x86_64.AppImage linuxdeploy.AppImage
        chmod +x linuxdeploy.AppImage  
        echo "86 86 86 86 86 86 86 86"
    - name: test arm
      if: ${{ matrix.ARCH == 'aarch64' }}
      run: |
        #wget https://github.com/linuxdeploy/linuxdeploy/releases/download/1-alpha-20250213-2/linuxdeploy-aarch64.AppImage
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-aarch64.AppImage
        mv linuxdeploy-aarch64.AppImage linuxdeploy.AppImage
        chmod +x linuxdeploy.AppImage  
        echo "arm arm arm arm arm arm arm arm "

    - name: build it
      run: |
        echo ${{ matrix.ARCH }}
        ls -l $AppDir
        ARCH=${{ matrix.ARCH }} ./linuxdeploy.AppImage --deploy-deps-only=$AppDir/usr/bin/bin --appdir $AppDir --output appimage
        #ARCH=x86_64 ./linuxdeploy.AppImage --deploy-deps-only=$AppDir/usr/bin/bin --appdir $AppDir --output appimage

        chmod 777 Space_Nerds_in_Space-${{ matrix.ARCH }}.AppImage
        #test it
        printf '0' |./Space_Nerds_in_Space-${{ matrix.ARCH }}.AppImage

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Space_Nerds_in_Space-${{ matrix.ARCH }}.AppImage 
        path: Space_Nerds_in_Space-${{ matrix.ARCH }}.AppImage 
 
    - name: upload binaries to release
      uses: softprops/action-gh-release@v2
      #if: ${{startsWith(github.ref, 'refs/tags/') }}
      with:
          tag_name: "try_me"
          files: Space_Nerds_in_Space-${{ matrix.ARCH }}.AppImage 
